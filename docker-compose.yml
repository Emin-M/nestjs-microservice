version: '3.7'
services:
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    environment:
      JVMFLAGS: "-Djava.security.auth.login.config=/etc/zookeeper/zookeeper_jaas.conf"
    volumes:
      - ./configs/zookeeper_jaas.conf:/etc/zookeeper/zookeeper_jaas.conf
    ports:
      - 2181:2181

  kafka:
    image: wurstmeister/kafka:2.13-2.8.1
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://:9093,EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9093,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:SASL_PLAINTEXT,EXTERNAL:SASL_PLAINTEXT
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_jaas.conf"
      security.protocol: sasl_plaintext
    volumes:
      - ./configs/kafka_server_jaas.conf:/etc/kafka/kafka_jaas.conf
  es-node-01:
    container_name: es-node-01
    ports:
      - '9200:9200'
      - '9300:9300'
    environment:
      - discovery.type=single-node
    image: 'docker.elastic.co/elasticsearch/elasticsearch:7.16.2'
    networks:
      - elastic
  kibana-01:
    container_name: kibana-01
    ports:
      - '5601:5601'
    environment:
      - 'ELASTICSEARCH_HOSTS=http://es-node-01:9200'
    image: 'docker.elastic.co/kibana/kibana:7.16.2'
    healthcheck:
      test: [ "CMD", "curl", "-f", "kibana-01:5601" ]
      interval: 10s
      timeout: 10s
      retries: 5
    depends_on:
      - es-node-01
    networks:
      - elastic

  filebeat:
    user: root
    container_name: filebeat
    command: --strict.perms=false
    volumes:
      - ./configs/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./api-geteaway/logs:/usr/share/filebeat/api/logs:ro
      - ./auth/logs:/usr/share/filebeat/auth/logs:ro
      - ./billing/logs:/usr/share/filebeat/billing/logs:ro
    image: 'docker.elastic.co/beats/filebeat:7.16.2'
    depends_on:
      - kibana-01
    #      kibana-01:
    #        condition: service_healthy
    networks:
      - elastic

  logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash:7.16.2
    volumes:
      - ./configs/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - '5044:5044'
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - es-node-01
      - kibana-01
    #      es-node-01:
    #        condition: service_healthy
    #      kibana-01:
    #        condition: service_healthy
    networks:
      - elastic

networks:
  elastic:
    name: elastic
